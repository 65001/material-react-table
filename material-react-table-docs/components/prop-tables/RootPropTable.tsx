import React, { useMemo } from 'react';
import MaterialReactTable, {
  MRT_ColumnDef,
  MaterialReactTableProps,
} from 'material-react-table';
import { Link, useTheme } from '@mui/material';

type PropRow = {
  defaultValue?: string;
  description?: string;
  link?: string;
  linkText?: string;
  prop: keyof MaterialReactTableProps;
  required?: boolean;
  source?: 'MRT' | 'TanStack Table' | 'MUI' | '';
  type?: string;
};

const data = [
  {
    prop: 'columns',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: true,
    source: 'TanStack Table',
    type: 'Array<MRT_ColumnDef>',
  },
  {
    prop: 'data',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: true,
    source: 'TanStack Table',
    type: 'Array<Your Row Data Type>',
  },
  {
    prop: 'aggregationFns',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'autoResetAll',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'autoResetExpanded',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'autoResetPageIndex',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'columnResizeMode',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'debugAll',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'debugColumns',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'debugHeaders',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'debugRows',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'debugTable',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'defaultColumn',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'editingMode',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableClickToCopy',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableColumnActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableColumnFilters',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableColumnOrdering',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableColumnResizing',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableDensePaddingToggle',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableEditing',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableExpandAll',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableExpanding',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableFilters',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableFullScreenToggle',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableGlobalFilter',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableGrouping',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableHiding',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableMultiRemove',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableMultiRowSelection',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableMultiSort',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enablePagination',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enablePersistentState',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enablePinning',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableRowActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableRowNumbers',
    defaultValue: '',
    description: '',
    link: '/docs/guides/row-numbers',
    linkText: 'Row Numbers Feature Guide',
    required: false,
    source: 'MRT',
    type: 'boolean',
  },
  {
    prop: 'enableRowSelection',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableSelectAll',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableSorting',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableSortingRemoval',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableStickyHeader',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableSubRowSelection',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableTableFooter',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableTableHead',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableToolbarBottom',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableToolbarInternalActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enableToolbarTop',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enabledColumnFilterOptions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'enabledGlobalFilterOptions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'expandRowsFn',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'filterFns',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'filterFromLeafRows',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getColumnCanGlobalFilter',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getCoreRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getExpandedRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getFacetedMinMaxValues',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getFacetedRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getFacetedUniqueValues',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getFilteredRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getGroupedRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getIsRowExpanded',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getPaginationRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getRowCanExpand',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getRowId',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getSortedRowModel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'getSubRows',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'globalFilterFn',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'groupedColumnMode',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'icons',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'initialState',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'isMultiSortEvent',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'key',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'localization',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'manualExpanding',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'manualFiltering',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'manualGrouping',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'manualPagination',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'manualSorting',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'maxMultiSortColCount',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'mergeOptions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'meta',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiLinearProgressProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiSearchTextFieldProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiSelectCheckboxProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableBodyCellCopyButtonProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableBodyCellEditTextFieldProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableBodyCellProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableBodyCellSkeletonProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableBodyProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableContainerProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableDetailPanelProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableFooterCellProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableFooterProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableFooterRowProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableHeadCellColumnActionsButtonProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableHeadCellFilterTextFieldProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableHeadCellProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableHeadProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableHeadRowProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTablePaginationProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTablePaperProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableToolbarAlertBannerProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableToolbarBottomProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'muiTableToolbarTopProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onColumnFiltersChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onColumnOrderChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onColumnPinningChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onColumnSizingChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onColumnSizingInfoChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onColumnVisibilityChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onExpandedChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onGlobalFilterChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onGroupingChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtCellClick',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtCellEditBlur',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtCellEditChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtDetailPanelClick',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtEditRowSubmit',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtFilterValueChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtGlobalFilterValueChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtRowClick',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtRowExpandChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtSelectAllChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtSelectRowChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtToggleColumnVisibility',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtToggleDensePadding',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtToggleFullScreen',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtToggleShowFilters',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onMrtToggleShowGlobalFilter',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onPaginationChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onRowSelectionChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onSortingChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'onStateChange',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'paginateExpandedRows',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'persistentStateMode',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'positionActionsColumn',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'positionGlobalFilter',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'positionPagination',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'positionToolbarActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'positionToolbarAlertBanner',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'renderDetailPanel',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'renderRowActionMenuItems',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'renderRowActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'renderToolbarCustomActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'renderToolbarInternalActions',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'rowNumberMode',
    defaultValue: "'original'",
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: "'original' | 'static'",
  },
  {
    prop: 'selectAllMode',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'sortDescFirst',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'sortingFns',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'state',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'tableId',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
  {
    prop: 'virtualizerProps',
    defaultValue: '',
    description: '',
    link: '',
    linkText: '',
    required: false,
    source: '',
    type: '',
  },
] as PropRow[];

const RootPropTable = () => {
  const theme = useTheme();

  const columns = useMemo(
    () =>
      [
        {
          enableClickToCopy: true,
          header: 'Prop Name',
          id: 'prop',
          Cell: ({ cell }) =>
            cell.row.original?.required ? (
              <strong style={{ color: theme.palette.primary.dark }}>
                <>{cell.getValue()}*</>
              </strong>
            ) : (
              cell.getValue()
            ),
        },
        { header: 'Required', id: 'required', enableGlobalFilter: false },
        { header: 'Type', id: 'type', enableGlobalFilter: false },
        { header: 'Default', id: 'defaultValue', enableGlobalFilter: false },
        { header: 'Description', id: 'description', enableGlobalFilter: false },
        {
          header: 'More Info Links',
          id: 'link',
          disableFilters: true,
          enableGlobalFilter: false,
          Cell: ({ cell }) => (
            <Link href={cell.getValue() as string} target="_blank">
              {' '}
              {cell.row.original?.linkText}{' '}
            </Link>
          ),
        },
        { header: 'Source', id: 'source', enableGlobalFilter: false },
      ] as MRT_ColumnDef<PropRow>[],
    [theme],
  );

  return (
    <MaterialReactTable
      columns={columns}
      data={data}
      enableColumnOrdering
      enablePagination={false}
      enablePinning
      enableRowNumbers
      enableStickyHeader={false}
      enableToolbarBottom={false}
      initialState={{
        columnVisibility: {
          required: false,
        },
        isDensePadding: true,
        showGlobalFilter: true,
        sorting: [
          { id: 'required', desc: true },
          { id: 'prop', desc: false },
        ],
        columnPinning: { left: ['mrt-row-numbers', 'prop'], right: [] },
      }}
      muiSearchTextFieldProps={{
        placeholder: 'Search All Props',
        variant: 'outlined',
      }}
      positionGlobalFilter="left"
      rowNumberMode="static"
      tableId="root"
    />
  );
};

export default RootPropTable;
